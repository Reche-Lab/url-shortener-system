version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: url-shortener-db
    environment:
      POSTGRES_DB: url_shortener_db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - url-shortener-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d url_shortener_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  identity-service:
    build:
      context: .
      dockerfile: apps/identity-service/Dockerfile
    container_name: identity-service
    environment:
      - NODE_ENV=development
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=user
      - DB_PASSWORD=password
      - DB_DATABASE=url_shortener_db
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production-2024
      - JWT_EXPIRES_IN=7d
      - IDENTITY_SERVICE_PORT=3002
      - TYPEORM_SYNCHRONIZE=true
      - TYPEORM_LOGGING=true
    ports:
      - "3002:3002"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - url-shortener-network
    restart: unless-stopped

  url-shortener-service:
    build:
      context: .
      dockerfile: apps/url-shortener-service/Dockerfile
    container_name: url-shortener-service
    environment:
      - NODE_ENV=development
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=user
      - DB_PASSWORD=password
      - DB_DATABASE=url_shortener_db
      - URL_SHORTENER_PORT=3001
      - IDENTITY_SERVICE_URL=http://identity-service:3002
      - TYPEORM_SYNCHRONIZE=true
      - TYPEORM_LOGGING=true
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
      identity-service:
        condition: service_started
    networks:
      - url-shortener-network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  url-shortener-network:
    driver: bridge
